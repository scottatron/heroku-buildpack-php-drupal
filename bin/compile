#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# Heroku Revision.
#
# Affixed to all vendored binary output to represent changes to the
# compilation environment without a change to the upstream version,
# e.g. PHP 5.3.27 without, and then subsequently with, libmcrypt.
heroku_rev='-2'

# config
MCRYPT_VERSION="2.5.8"
APACHE_VERSION="2.2.25"
APACHE_PATH="apache"
PHP_VERSION="5.3.27"
PHP_PATH="php"
DRUSH_VERSION="5.9"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
if [[ -z "$_DEBUG" ]]; then echo "-----> BUILD_DIR: $BUILD_DIR"; fi
CACHE_DIR=$2
if [[ -z "$_DEBUG" ]]; then echo "-----> CACHE_DIR: $BUILD_DIR"; fi
LP_DIR=`cd $(dirname $0); cd ..; pwd`

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/profile
mv * $CACHE_DIR/profile
mv $CACHE_DIR/profile .

# keep Procfile
if [ -f $CACHE_DIR/profile/Procfile ]; then
  mv $CACHE_DIR/profile/Procfile .
fi

MCRYPT_URL="https://heroku-buildpack-php.s3.amazonaws.com/mcrypt-""$MCRYPT_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling mcrypt version $MCRYPT_VERSION"
curl --silent --max-time 60 --location "$MCRYPT_URL" | tar xz

APACHE_URL="https://heroku-buildpack-php.s3.amazonaws.com/apache-""$APACHE_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="https://heroku-buildpack-php.s3.amazonaws.com/php-$PHP_VERSION""$heroku_rev"".tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

DRUSH_URL="http://ftp.drupal.org/files/projects/drush-7.x-$DRUSH_VERSION.tar.gz"
echo "-----> Bundling Drush version $DRUSH_VERSION"
curl --silent --max-time 60 --location "$DRUSH_URL" | tar xz
export LD_LIBRARY_PATH=$BUILD_DIR/php/lib/php
export DRUSH_BIN="$BUILD_DIR/php/bin/php -f $BUILD_DIR/drush/drush.php -- --php=$BUILD_DIR/php/bin/php"

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -fs /app/php/bin/php bin/php

# Check if drupal install profile
if [ -f $BUILD_DIR/profile/build-*.make ] && [ ! -d $BUILD_DIR/www ]; then
  $DRUSH_BIN make $BUILD_DIR/profile/build-*.make $BUILD_DIR/www --prepare-install
  echo "-----> Appending settings.php snippets..."
  for f in $BUILD_DIR/profile/config/*.settings.php
  do
    # Concatenate newline and snippet, then append to settings.php
    echo "" | cat - $f | tee -a $BUILD_DIR/www/sites/default/settings.php > /dev/null
  done
fi

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/lib/php
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
